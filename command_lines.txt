
Just as a reminder, here are some of the command line commands!

** set your virtual environment variables, such as:
- FLASK_APP --> the file to run it all
- FLASK_ENV --> default is production. development includes debug on.
- FLASK_DEBUG --> 1 for on, 0 for off
- DATABASE_URL --> ???


`flask run` runs the FLASK_APP.
`flask db init` initiates the database (empty I believe)
`flask db migrate` sets some changes up
`flask db upgrade` commits those changes in the database


`flask shell` --> opens a python shell with everything already imported!

--> These are in IPython <--

	`u = User(username='susan', email='susan@example.com')` adds susan as a user
	`db.session.add( user )` adds user to the database
	`db.session.commit()` commits the database
	`db.session.rollback()` aborts the session & removes any stored changes
	`users = User.query.all()` queries all users

	if you know the ID of a user (or any primary key?), you can query that way:
	`u = User.query.get(1)` --> u returns <User john>

	Add a blog post!
	`u = User.query.get(1)`
	`p = Post(body='my first post!!', author=u)
	`db.session.add(p)`
	`db.session.commit()`

	Get all posts of an author
	`u.posts.all()` --> where u is a user, like as above
	`posts = Post.query.all()`
	`for p in posts:
		print(p.id, p.author.username, p.body)`
	`User.query.order_by(User.username.desc()).all()`

	Delete everything from IPython
	`users = User.query.all()`
	`for u in users:
		db.session.delete(u)`
	`posts = Post.query.all()`
	`for p in posts:
		db.session.delete(p)`
	`db.session.commit()`
--> End of IPython session <--

